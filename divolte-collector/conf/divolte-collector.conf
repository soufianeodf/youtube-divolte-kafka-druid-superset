divolte {
  global {
    server {
      // The host to which the server binds.
      // Set to a specific IP address to selectively listen on that interface.
      // If not present, a loopback-only address will be bound.
      host = 0.0.0.0
      // The bind host can be overridden using the DIVOLTE_HOST environment variable.
      host = ${?DIVOLTE_HOST}

      // The port on which the sever listens.
      port = 8290
      // Server port can be overridden using the DIVOLTE_PORT environment variable.
      port = ${?DIVOLTE_PORT}

      // Whether to use the X-Forwarded-For header HTTP header
      // for determining the source IP of a request if present.
      // When a X-Forwared-For header is present, the rightmost
      // IP address of the value is used as source IP when
      // when multiple IP addresses are separated by a comma.
      // When the header is present more than once, the last
      // value will be used.
      // E.g.
      // "X-Forwarded-For: 10.200.13.28, 11.45.82.30" ==> 11.45.82.30
      //
      // "X-Forwarded-For: 10.200.13.28"
      // "X-Forwarded-For: 11.45.82.30" ==> 11.45.82.30
      use_x_forwarded_for = false
      use_x_forwarded_for = ${?DIVOLTE_USE_XFORWARDED_FOR}

      // When true Divolte Collector serves a static test page at /.
      serve_static_resources = true
      serve_static_resources = ${?DIVOLTE_SERVICE_STATIC_RESOURCES}

      // Whether requests (and their response) should be logged for debugging.
      // This is for testing purposes only; it should never be enabled in production.
      debug_requests = false
    }
    
    kafka {
      // If true, flushing to Kafka is enabled.
      enabled = true
      enabled = ${?DIVOLTE_KAFKA_ENABLED}

      // Number of threads to use for flushing events to Kafka
      threads = 2

      // The maximum queue of mapped events to buffer before
      // starting to drop new ones. Note that when this buffer is full,
      // events are dropped and a warning is logged. No errors are reported
      // to the source of the events. A single buffer is shared between all
      // threads, and its size will be rounded up to the nearest power of 2.
      buffer_size = 1048576

      // The properties under the producer key in this
      // configuration are used to create a Properties object
      // which is passed to Kafka as is. At the very least,
      // configure the broker list here. For more options
      // that can be passed to a Kafka producer, see this link:
      // http://kafka.apache.org/082/documentation.html#newproducerconfigs
      producer = {
        bootstrap.servers = ["localhost:9092"]
        bootstrap.servers = ${?DIVOLTE_KAFKA_BROKER_LIST}
        client.id = divolte.collector
        client.id = ${?DIVOLTE_KAFKA_CLIENT_ID}

        acks = 1
        retries = 0
        compression.type = lz4
        max.in.flight.requests.per.connection = 1

        sasl.jaas.config = ""
        sasl.jaas.config = ${?KAFKA_SASL_JAAS_CONFIG}

        security.protocol = PLAINTEXT
        security.protocol = ${?KAFKA_SECURITY_PROTOCOL}
        sasl.mechanism = GSSAPI
        sasl.kerberos.service.name = kafka
      }
    }
  }

  mappings {
    a_mapping = {
        schema_file = "/opt/divolte/divolte-collector/conf/MyEventRecord.avsc"
        mapping_script_file = "/opt/divolte/divolte-collector/conf/mapping.groovy"
        discard_corrupted = true
        discard_duplicates = true
        sources = [browser]
        sinks = [divolte_kafka_sink]
    }
  }

  sinks {
    divolte_kafka_sink {
      type = kafka
      topic = tracking
      topic = ${?DIVOLTE_KAFKA_TOPIC}
    }
  }
}