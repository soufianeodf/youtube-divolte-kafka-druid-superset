version: "3.3"
services:

  # Website container
  website:
    build:
      context: .
      dockerfile: ./docker-images/Dockerfile.website
    image: website
    ports:
      - '80:80'

  # Kafka/Zookeeper container
  divolte-kafka:
    image: krisgeus/docker-kafka
    restart: always
    environment:
      ADVERTISED_HOST: divolte-kafka
      LOG_RETENTION_HOURS: 1
      AUTO_CREATE_TOPICS: "false"
      KAFKA_CREATE_TOPICS: tracking:4:1
      ADVERTISED_LISTENERS: PLAINTEXT://divolte-kafka:9092,INTERNAL://localhost:9093
      LISTENERS: PLAINTEXT://0.0.0.0:9092,INTERNAL://0.0.0.0:9093
      SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT
      INTER_BROKER: INTERNAL

  # Divolte container
  docker-divolte:
    build:
      context: .
      dockerfile: ./docker-images/Dockerfile.divolte
    image: divolte-collector
    restart: always
    environment:
      DIVOLTE_KAFKA_BROKER_LIST: divolte-kafka:9092
    ports:
      - 8290:8290
    depends_on:
      - divolte-kafka

  # Apache Druid
  apache-druid:
    build:
      context: .
      dockerfile: ./docker-images/Dockerfile.druid
    image: druid
    restart: always
    ports:
      - 8081:8081
      - 8082:8082
      - 8888:8888
    depends_on:
      - divolte-kafka

  # ksql server
  ksqldb-server:
  image: confluentinc/ksqldb-server:0.20.0
  hostname: ksqldb-server
  container_name: ksqldb-server
  depends_on:
    - divolte-kafka
  ports:
    - "8088:8088"
  environment:
    KSQL_LISTENERS: http://0.0.0.0:8088
    KSQL_BOOTSTRAP_SERVERS: divolte-kafka:9092
    KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: "true"
    KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: "true"

  # ksql cli
  ksqldb-cli:
    image: confluentinc/ksqldb-cli:0.20.0
    container_name: ksqldb-cli
    depends_on:
      - divolte-kafka
      - ksqldb-server
    entrypoint: /bin/sh
    tty: true
