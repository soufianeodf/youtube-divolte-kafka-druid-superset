version: "3.3"
services:

  # Website container
  website:
    build:
      context: ./website
      dockerfile: Dockerfile
    image: soufianeodf/website
    container_name: website
    networks:
      - frontend
    deploy:
      replicas: 1
    ports:
      - '80:80'

  # Kafka/Zookeeper container
  divolte-kafka:
    image: krisgeus/docker-kafka
    container_name: divolte-kafka
    networks:
      - backend
    deploy:
      replicas: 1
    restart: always
    environment:
      ADVERTISED_HOST: divolte-kafka
      LOG_RETENTION_HOURS: 1
      AUTO_CREATE_TOPICS: "false"
      KAFKA_CREATE_TOPICS: tracking:4:1,tracking-json:12:1
      ADVERTISED_LISTENERS: PLAINTEXT://divolte-kafka:9092,INTERNAL://localhost:9093
      LISTENERS: PLAINTEXT://0.0.0.0:9092,INTERNAL://0.0.0.0:9093
      SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT
      INTER_BROKER: INTERNAL

  # Kafka Manager (CMAK)
  cmak:
    image: hlebalbau/kafka-manager:stable
    container_name: cmak
    networks:
      - backend
    deploy:
      replicas: 1
    restart: always
    ports:
      - "9000:9000"
    environment:
      ZK_HOSTS: "divolte-kafka:2181"
    depends_on:
      - divolte-kafka

  # Divolte container
  docker-divolte:
    build:
      context: ./divolte-collector
      dockerfile: Dockerfile
    image: soufianeodf/divolte-collector
    container_name: docker-divolte
    networks:
      - frontend
      - backend
    deploy:
      replicas: 3
    restart: always
    environment:
      DIVOLTE_KAFKA_BROKER_LIST: divolte-kafka:9092
    ports:
      - 8290:8290
    depends_on:
      - divolte-kafka

  # Kafka streams container
  kafka-streams:
    build:
      context: ./kafka-streams-avro-to-json
      dockerfile: Dockerfile
    image: soufianeodf/kafka-streams
    container_name: kafka-streams
    networks:
      - backend
    deploy:
      replicas: 1
    restart: always
    depends_on:
      - divolte-kafka

  # Apache Druid container
  apache-druid:
    build:
      context: ./druid
      dockerfile: Dockerfile
    image: soufianeodf/apache-druid
    container_name: apache-druid
    networks:
      - backend
    deploy:
      replicas: 1
    restart: always
    ports:
      - 8081:8081
      - 8082:8082
      - 8888:8888
    depends_on:
      - divolte-kafka

  # Apache Superset container
  apache-superset:
    build:
      context: ./superset
      dockerfile: Dockerfile
    image: soufianeodf/apache-superset
    container_name: superset
    networks:
      - backend
    deploy:
      replicas: 1
      placement:
        constraints: [node.node == node1]
    restart: always
    ports:
      - 8080:8088

networks:
  frontend:
  backend:
